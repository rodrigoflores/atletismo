# encoding: utf-8

class TestesController < ApplicationController

  before_filter :login_required
  before_filter :get_atleta_com_seguranca
  before_filter :atleta_prohibited, :only => [:new, :edit, :create, :update]
  before_filter :testes_distancia_form
  before_filter :testes_peso_form

  # Precisa fazer a migracao pra tirar a coluna "periodo" da tabela de testes (igual tá no provas)

  active_scaffold :testes do |config|
    config.label = "Testes"
    list.sorting = {:data => 'DESC' }
    config.columns = [:nome,:data,:clima,:busca_periodo,:resultado]
    config.list.columns.exclude :association_column

    #Label
    config.columns[:data].label = "Data"
    config.columns[:busca_periodo].label = "Período"
    config.columns[:resultado].label = 'Resultado'

    #Search
    config.search.columns << :distancia
    config.search.columns << :kg
    config.search.columns << :data

    config.action_links.add "graphic",
    :type => :table,
    :label => "Gráfico",
    :inline => false
  end


  def show
    @teste = Teste.find(params[:id])
    render :active_scaffold => 'Testes'
  end

  def new
    @teste = Teste.new
    render :active_scaffold => 'Testes'

  end

  def edit
    @teste = Teste.find(params[:id])
    render :active_scaffold => 'Testes'

  end


  def create
    @teste = Teste.new(params[:teste])
    if params[:atleta_id]
      @teste.atleta_id = params[:atleta_id]
    end
    if @teste.save
      flash[:notice] = 'Teste foi criado com sucesso.'
      @testes = Teste.find(:all, :conditions => {:atleta_id => @teste.atleta_id})
      redirect_to atleta_testes_path(@atleta);
    else
      render :action => "new"
    end
  end


  def update
    @teste = Teste.find(params[:id])

    if @teste.update_attributes(params[:teste])
      flash[:notice] = 'Teste foi atualizado com sucesso.'
      redirect_to atleta_testes_path(@atleta);
    else
      render :action => "edit"
    end
  end

  def graphic

    if params[:distancia]
      @testes = Teste.find(:all, :conditions => {:atleta_id => @atleta.id, :distancia => params[:distancia]}, :order => "data ASC")
      make_graphic(@testes, 'tempo_em_minutos', 'Tempo (minutos)')
    elsif params[:kg]
        @testes = Teste.find(:all, :conditions => {:atleta_id => @atleta.id, :kg => params[:kg]}, :order => "data ASC")
        make_graphic(@testes, 'kg', 'Peso (kg)')
    else
      flash[:notice] = 'Filtre por distância ou peso!'
      redirect_to atleta_testes_path(@atleta);
    end

  end



  def distancia
    @testes_peso = false
    @condition = "distancia = #{params[:distancia]}"
    index
  end

  def peso
    @testes_distancia = false
    @condition = "kg = #{params[:kg]}"
    index
  end

  def conditions_for_collection
    @condition
  end


  protected

  # Segurança
  def get_atleta
    if (user_is_treinador?)
      @atleta = Atleta.find(params[:atleta_id])
    else
      if @atleta = Atleta.find(params[:atleta_id]) == current_atleta
        @atleta = current_atleta
      else
        flash[:alert] = "Erro: Você não tem acesso à página "+request.request_uri
        redirect_to root_path()
      end
    end
  end


  def testes_distancia_form
    @testes_distancia=true
    if params[:distancia]
      @voltar_link_distancia=true
      @distancia = params[:distancia]
    end
  end

  def testes_peso_form
    @testes_peso=true
    if params[:kg]
      @voltar_link_peso=true
      @peso = params[:kg]
    end
  end



  # para tirar os links de edicao na tela do treinador
  def create_authorized?
    user_is_treinador?
  end
  def update_authorized?
    user_is_treinador?
  end
  def delete_authorized?
    user_is_treinador?
  end


end
